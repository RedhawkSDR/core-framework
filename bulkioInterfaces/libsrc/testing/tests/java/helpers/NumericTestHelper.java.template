/*
 * This file is protected by Copyright. Please refer to the COPYRIGHT file
 * distributed with this source distribution.
 *
 * This file is part of REDHAWK bulkioInterfaces.
 *
 * REDHAWK bulkioInterfaces is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 *
 * REDHAWK bulkioInterfaces is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/.
 */
/*
 * WARNING: This file is generated from TestHelper.java.template.
 *          Do not modify directly.
 */

package helpers;

import bulkio.InDataPort;
import bulkio.In@name@Port;
import bulkio.OutDataPort;
import bulkio.Out@name@Port;

import stubs.Stub;
import stubs.In@name@PortStub;

public class @name@TestHelper implements TestHelper<BULKIO.@idl@Operations,@type@> {

    public static final int BITS_PER_ELEMENT = @size@ * 8;

    public int bitsPerElement()
    {
        return @name@TestHelper.BITS_PER_ELEMENT;
    }

    public In@name@Port createInPort(String name)
    {
        return new In@name@Port(name);
    }

    public Out@name@Port createOutPort(String name)
    {
        return new Out@name@Port(name);
    }

    public Stub<@type@> createStub()
    {
        return new In@name@PortStub();
    }

    public @name@TestHelper()
    {
    }

    public String getName()
    {
        return "@idl@";
    }

    public BULKIO.@idl@Operations toCorbaType(InDataPort<BULKIO.@idl@Operations,@type@> port)
    {
        return (BULKIO.@idl@Operations) port;
    }

    public void pushTestPacket(InDataPort<BULKIO.@idl@Operations,@type@> port, int length, BULKIO.PrecisionUTCTime time, boolean eos, String streamID)
    {
        @type@ data = makeData(length);
        toCorbaType(port).pushPacket(data, time, eos, streamID);
    }

    public void pushTestPacket(OutDataPort<BULKIO.@idl@Operations,@type@> port, int length, BULKIO.PrecisionUTCTime time, boolean eos, String streamID)
    {
        @type@ data = makeData(length);
        port.pushPacket(data, time, eos, streamID);
    }

    public int dataLength(@type@ data)
    {
        return data.length;
    }

    public @type@ makeData(int length)
    {
        return new @elem@[length];
    }
}
