#
# This file is protected by Copyright. Please refer to the COPYRIGHT file 
# distributed with this source distribution.
# 
# This file is part of REDHAWK core.
# 
# REDHAWK core is free software: you can redistribute it and/or modify it under 
# the terms of the GNU Lesser General Public License as published by the Free 
# Software Foundation, either version 3 of the License, or (at your option) any 
# later version.
# 
# REDHAWK core is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
# 
# You should have received a copy of the GNU Lesser General Public License 
# along with this program.  If not, see http://www.gnu.org/licenses/.
#

namespace urn:mil:jpeojtrs:sca:spd {
include "vector";
include "map";
include "utility";
include "memory";
include "../../include/ossie/SoftPkg.h";
include "../../include/ossie/componentProfile.h";

scaComplianceType "::std::string";
localFile "::std::string";
softPkg "std::auto_ptr<ossie::SPD>";
propertyFile "::std::string";
descriptor "::std::string";
author "ossie::SPD::Author";
usesDevice "ossie::UsesDevice";
implementation "ossie::SPD::Implementation";
dependency "ossie::DependencyRef*";
codeFileType "::ossie::SPD::Code::CodeType" "::ossie::SPD::Code::CodeType";
code "ossie::SPD::Code";
compiler "ossie::SPD::NameVersionPair";
humanlangauge "::std::string";
programminglanguage "ossie::SPD::NameVersionPair"; 
propertyRef "ossie::PropertyRef";
softPkgRef "ossie::SPD::SoftPkgRef"; 
implRef "::std::string";
os "ossie::SPD::NameVersionPair";
processor "::std::string";
runtime "ossie::SPD::NameVersionPair";
usesdevice "::std::vector<ossie::UsesDevice>";
simpleref "const ossie::SimplePropertyRef &" "const ossie::SimplePropertyRef &";
simplesequenceref "const ossie::SimpleSequencePropertyRef &" "const ossie::SimpleSequencePropertyRef &";
structref "const ossie::StructPropertyRef &" "const ossie::StructPropertyRef &";
structsequenceref "const ossie::StructSequencePropertyRef &" "const ossie::StructSequencePropertyRef &";
structvalue "const ossie::ComponentPropertyMap &" "const ossie::ComponentPropertyMap &";
values "::std::vector<std::string>";
}
